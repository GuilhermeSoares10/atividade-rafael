## Atividade 1 – Reescrevendo código sem `goto`
Você recebeu o seguinte pseudocódigo, escrito de forma semelhante ao estilo das primeiras versões do Fortran, utilizando `goto`:

```text
i := 1
goto check

loop:
    print(i)
    i := i + 1

check:
    if (i <= 10) then
        goto loop
```

**Tarefas:**
1. Reescreva o código acima utilizando um laço de repetição pré-teste (`while`) em uma linguagem de sua escolha (C, Java, Python, etc.).
Versão com while (em Python)
i = 1
while i <= 10:
    print(i)
    i = i + 1

2. Reescreva novamente utilizando um laço de repetição controlado por contador (`for`).
Versão com for (em Python)
for i in range(1, 11):
    print(i)

3. Compare os três códigos (original com `goto`, versão com `while` e versão com `for`) e escreva um pequeno parágrafo discutindo qual forma é mais legível e por quê.
O código original escrito com a estrutura de desvio incondicional goto cumpre corretamente a tarefa, porém apresenta baixa legibilidade, 
pois o fluxo de execução não é explícito e depende do acompanhamento dos rótulos e saltos para ser compreendido. Na versão reescrita com o laço while, 
a lógica se torna mais clara, já que a condição de continuidade é declarada diretamente na estrutura de repetição, eliminando a necessidade de saltos. 
Já a versão com o laço for é a mais legível e concisa, pois concentra em sua declaração inicial todas as informações essenciais do processo iterativo: 
valor inicial, condição de término e incremento. Dessa forma, em termos de clareza, manutenção e boas práticas de programação, o uso do for se mostra a 
alternativa mais adequada entre as três abordagens.

